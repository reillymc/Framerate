/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InviteDetails,
  Secret,
} from '../models/index';
import {
    InviteDetailsFromJSON,
    InviteDetailsToJSON,
    SecretFromJSON,
    SecretToJSON,
} from '../models/index';

export interface AdministrationApiGenerateInviteRequest {
    inviteDetails: InviteDetails;
}

export interface AdministrationApiGenerateSetupTokenRequest {
    secret: Secret;
}

/**
 * AdministrationApi - interface
 * 
 * @export
 * @interface AdministrationApiInterface
 */
export interface AdministrationApiInterface {
    /**
     * 
     * @param {InviteDetails} inviteDetails 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdministrationApiInterface
     */
    generateInviteRaw(requestParameters: AdministrationApiGenerateInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;

    /**
     */
    generateInvite(requestParameters: AdministrationApiGenerateInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;

    /**
     * 
     * @param {Secret} secret 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdministrationApiInterface
     */
    generateSetupTokenRaw(requestParameters: AdministrationApiGenerateSetupTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;

    /**
     */
    generateSetupToken(requestParameters: AdministrationApiGenerateSetupTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;

}

/**
 * 
 */
export class AdministrationApi extends runtime.BaseAPI implements AdministrationApiInterface {

    /**
     */
    async generateInviteRaw(requestParameters: AdministrationApiGenerateInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['inviteDetails'] == null) {
            throw new runtime.RequiredError(
                'inviteDetails',
                'Required parameter "inviteDetails" was null or undefined when calling generateInvite().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/administration/generate_invite`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InviteDetailsToJSON(requestParameters['inviteDetails']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async generateInvite(requestParameters: AdministrationApiGenerateInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.generateInviteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async generateSetupTokenRaw(requestParameters: AdministrationApiGenerateSetupTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['secret'] == null) {
            throw new runtime.RequiredError(
                'secret',
                'Required parameter "secret" was null or undefined when calling generateSetupToken().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/administration/generate_setup_token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SecretToJSON(requestParameters['secret']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async generateSetupToken(requestParameters: AdministrationApiGenerateSetupTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.generateSetupTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
