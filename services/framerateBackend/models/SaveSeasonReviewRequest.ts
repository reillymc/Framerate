/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReviewCompanySummary } from './ReviewCompanySummary';
import {
    ReviewCompanySummaryFromJSON,
    ReviewCompanySummaryFromJSONTyped,
    ReviewCompanySummaryToJSON,
    ReviewCompanySummaryToJSONTyped,
} from './ReviewCompanySummary';

/**
 * 
 * @export
 * @interface SaveSeasonReviewRequest
 */
export interface SaveSeasonReviewRequest {
    /**
     * 
     * @type {Array<ReviewCompanySummary>}
     * @memberof SaveSeasonReviewRequest
     */
    company?: Array<ReviewCompanySummary>;
    /**
     * 
     * @type {Date}
     * @memberof SaveSeasonReviewRequest
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof SaveSeasonReviewRequest
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof SaveSeasonReviewRequest
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof SaveSeasonReviewRequest
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof SaveSeasonReviewRequest
     */
    venue?: string;
}

/**
 * Check if a given object implements the SaveSeasonReviewRequest interface.
 */
export function instanceOfSaveSeasonReviewRequest(value: object): value is SaveSeasonReviewRequest {
    return true;
}

export function SaveSeasonReviewRequestFromJSON(json: any): SaveSeasonReviewRequest {
    return SaveSeasonReviewRequestFromJSONTyped(json, false);
}

export function SaveSeasonReviewRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveSeasonReviewRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'company': json['company'] == null ? undefined : ((json['company'] as Array<any>).map(ReviewCompanySummaryFromJSON)),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'description': json['description'] == null ? undefined : json['description'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'title': json['title'] == null ? undefined : json['title'],
        'venue': json['venue'] == null ? undefined : json['venue'],
    };
}

export function SaveSeasonReviewRequestToJSON(json: any): SaveSeasonReviewRequest {
    return SaveSeasonReviewRequestToJSONTyped(json, false);
}

export function SaveSeasonReviewRequestToJSONTyped(value?: SaveSeasonReviewRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'company': value['company'] == null ? undefined : ((value['company'] as Array<any>).map(ReviewCompanySummaryToJSON)),
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'description': value['description'],
        'rating': value['rating'],
        'title': value['title'],
        'venue': value['venue'],
    };
}

