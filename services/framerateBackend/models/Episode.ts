/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Episode
 */
export interface Episode {
    /**
     * 
     * @type {Date}
     * @memberof Episode
     */
    airDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof Episode
     */
    episodeNumber: number;
    /**
     * 
     * @type {string}
     * @memberof Episode
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Episode
     */
    overview?: string;
    /**
     * 
     * @type {string}
     * @memberof Episode
     */
    stillPath?: string;
}

/**
 * Check if a given object implements the Episode interface.
 */
export function instanceOfEpisode(value: object): value is Episode {
    if (!('episodeNumber' in value) || value['episodeNumber'] === undefined) return false;
    return true;
}

export function EpisodeFromJSON(json: any): Episode {
    return EpisodeFromJSONTyped(json, false);
}

export function EpisodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Episode {
    if (json == null) {
        return json;
    }
    return {
        
        'airDate': json['airDate'] == null ? undefined : (new Date(json['airDate'])),
        'episodeNumber': json['episodeNumber'],
        'name': json['name'] == null ? undefined : json['name'],
        'overview': json['overview'] == null ? undefined : json['overview'],
        'stillPath': json['stillPath'] == null ? undefined : json['stillPath'],
    };
}

export function EpisodeToJSON(json: any): Episode {
    return EpisodeToJSONTyped(json, false);
}

export function EpisodeToJSONTyped(value?: Episode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'airDate': value['airDate'] == null ? undefined : ((value['airDate']).toISOString().substring(0,10)),
        'episodeNumber': value['episodeNumber'],
        'name': value['name'],
        'overview': value['overview'],
        'stillPath': value['stillPath'],
    };
}

