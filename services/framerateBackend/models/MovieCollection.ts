/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MovieEntry } from './MovieEntry';
import {
    MovieEntryFromJSON,
    MovieEntryFromJSONTyped,
    MovieEntryToJSON,
    MovieEntryToJSONTyped,
} from './MovieEntry';

/**
 * 
 * @export
 * @interface MovieCollection
 */
export interface MovieCollection {
    /**
     * 
     * @type {string}
     * @memberof MovieCollection
     */
    collectionId: string;
    /**
     * 
     * @type {Array<MovieEntry>}
     * @memberof MovieCollection
     */
    entries?: Array<MovieEntry>;
    /**
     * 
     * @type {string}
     * @memberof MovieCollection
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MovieCollection
     */
    userId: string;
}

/**
 * Check if a given object implements the MovieCollection interface.
 */
export function instanceOfMovieCollection(value: object): value is MovieCollection {
    if (!('collectionId' in value) || value['collectionId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function MovieCollectionFromJSON(json: any): MovieCollection {
    return MovieCollectionFromJSONTyped(json, false);
}

export function MovieCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovieCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'collectionId': json['collectionId'],
        'entries': json['entries'] == null ? undefined : ((json['entries'] as Array<any>).map(MovieEntryFromJSON)),
        'name': json['name'],
        'userId': json['userId'],
    };
}

export function MovieCollectionToJSON(json: any): MovieCollection {
    return MovieCollectionToJSONTyped(json, false);
}

export function MovieCollectionToJSONTyped(value?: MovieCollection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collectionId': value['collectionId'],
        'entries': value['entries'] == null ? undefined : ((value['entries'] as Array<any>).map(MovieEntryToJSON)),
        'name': value['name'],
        'userId': value['userId'],
    };
}

