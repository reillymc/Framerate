/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    avatarUri?: string;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    configuration: any | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    dateCreated: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName: string;
    /**
     * 
     *      * -20: Non-authenticatable user (review company without actual account)
     *      * -10: Registered, but not approved (if approvals required)
     *      * 10: Regular user
     *      * 20: Admin user
     * @type {number}
     * @memberof User
     */
    permissionLevel: number;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    public: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    userId: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('configuration' in value) || value['configuration'] === undefined) return false;
    if (!('dateCreated' in value) || value['dateCreated'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('permissionLevel' in value) || value['permissionLevel'] === undefined) return false;
    if (!('public' in value) || value['public'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'avatarUri': json['avatarUri'] == null ? undefined : json['avatarUri'],
        'configuration': json['configuration'],
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'dateCreated': json['dateCreated'],
        'email': json['email'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'permissionLevel': json['permissionLevel'],
        'public': json['public'],
        'userId': json['userId'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avatarUri': value['avatarUri'],
        'configuration': value['configuration'],
        'createdBy': value['createdBy'],
        'dateCreated': value['dateCreated'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'permissionLevel': value['permissionLevel'],
        'public': value['public'],
        'userId': value['userId'],
    };
}

