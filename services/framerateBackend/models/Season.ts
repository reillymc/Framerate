/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Episode } from './Episode';
import {
    EpisodeFromJSON,
    EpisodeFromJSONTyped,
    EpisodeToJSON,
    EpisodeToJSONTyped,
} from './Episode';

/**
 * 
 * @export
 * @interface Season
 */
export interface Season {
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    airDate?: string;
    /**
     * 
     * @type {number}
     * @memberof Season
     */
    episodeCount?: number;
    /**
     * 
     * @type {Array<Episode>}
     * @memberof Season
     */
    episodes?: Array<Episode>;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    overview?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    posterPath?: string;
    /**
     * 
     * @type {number}
     * @memberof Season
     */
    seasonNumber: number;
    /**
     * 
     * @type {number}
     * @memberof Season
     */
    showId: number;
}

/**
 * Check if a given object implements the Season interface.
 */
export function instanceOfSeason(value: object): value is Season {
    if (!('seasonNumber' in value) || value['seasonNumber'] === undefined) return false;
    if (!('showId' in value) || value['showId'] === undefined) return false;
    return true;
}

export function SeasonFromJSON(json: any): Season {
    return SeasonFromJSONTyped(json, false);
}

export function SeasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Season {
    if (json == null) {
        return json;
    }
    return {
        
        'airDate': json['airDate'] == null ? undefined : json['airDate'],
        'episodeCount': json['episodeCount'] == null ? undefined : json['episodeCount'],
        'episodes': json['episodes'] == null ? undefined : ((json['episodes'] as Array<any>).map(EpisodeFromJSON)),
        'name': json['name'] == null ? undefined : json['name'],
        'overview': json['overview'] == null ? undefined : json['overview'],
        'posterPath': json['posterPath'] == null ? undefined : json['posterPath'],
        'seasonNumber': json['seasonNumber'],
        'showId': json['showId'],
    };
}

export function SeasonToJSON(json: any): Season {
    return SeasonToJSONTyped(json, false);
}

export function SeasonToJSONTyped(value?: Season | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'airDate': value['airDate'],
        'episodeCount': value['episodeCount'],
        'episodes': value['episodes'] == null ? undefined : ((value['episodes'] as Array<any>).map(EpisodeToJSON)),
        'name': value['name'],
        'overview': value['overview'],
        'posterPath': value['posterPath'],
        'seasonNumber': value['seasonNumber'],
        'showId': value['showId'],
    };
}

