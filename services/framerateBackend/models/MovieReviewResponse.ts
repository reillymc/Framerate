/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Movie } from './Movie';
import {
    MovieFromJSON,
    MovieFromJSONTyped,
    MovieToJSON,
    MovieToJSONTyped,
} from './Movie';
import type { ReviewCompanyDetails } from './ReviewCompanyDetails';
import {
    ReviewCompanyDetailsFromJSON,
    ReviewCompanyDetailsFromJSONTyped,
    ReviewCompanyDetailsToJSON,
    ReviewCompanyDetailsToJSONTyped,
} from './ReviewCompanyDetails';

/**
 * 
 * @export
 * @interface MovieReviewResponse
 */
export interface MovieReviewResponse {
    /**
     * 
     * @type {Array<ReviewCompanyDetails>}
     * @memberof MovieReviewResponse
     */
    company?: Array<ReviewCompanyDetails>;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    description?: string;
    /**
     * 
     * @type {Movie}
     * @memberof MovieReviewResponse
     */
    movie: Movie;
    /**
     * 
     * @type {number}
     * @memberof MovieReviewResponse
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    reviewId: string;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof MovieReviewResponse
     */
    venue?: string;
}

/**
 * Check if a given object implements the MovieReviewResponse interface.
 */
export function instanceOfMovieReviewResponse(value: object): value is MovieReviewResponse {
    if (!('movie' in value) || value['movie'] === undefined) return false;
    if (!('reviewId' in value) || value['reviewId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function MovieReviewResponseFromJSON(json: any): MovieReviewResponse {
    return MovieReviewResponseFromJSONTyped(json, false);
}

export function MovieReviewResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovieReviewResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'company': json['company'] == null ? undefined : ((json['company'] as Array<any>).map(ReviewCompanyDetailsFromJSON)),
        'date': json['date'] == null ? undefined : json['date'],
        'description': json['description'] == null ? undefined : json['description'],
        'movie': MovieFromJSON(json['movie']),
        'rating': json['rating'] == null ? undefined : json['rating'],
        'reviewId': json['reviewId'],
        'title': json['title'] == null ? undefined : json['title'],
        'userId': json['userId'],
        'venue': json['venue'] == null ? undefined : json['venue'],
    };
}

export function MovieReviewResponseToJSON(json: any): MovieReviewResponse {
    return MovieReviewResponseToJSONTyped(json, false);
}

export function MovieReviewResponseToJSONTyped(value?: MovieReviewResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'company': value['company'] == null ? undefined : ((value['company'] as Array<any>).map(ReviewCompanyDetailsToJSON)),
        'date': value['date'],
        'description': value['description'],
        'movie': MovieToJSON(value['movie']),
        'rating': value['rating'],
        'reviewId': value['reviewId'],
        'title': value['title'],
        'userId': value['userId'],
        'venue': value['venue'],
    };
}

