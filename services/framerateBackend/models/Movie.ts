/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MovieCredits } from './MovieCredits';
import {
    MovieCreditsFromJSON,
    MovieCreditsFromJSONTyped,
    MovieCreditsToJSON,
    MovieCreditsToJSONTyped,
} from './MovieCredits';

/**
 * 
 * @export
 * @interface Movie
 */
export interface Movie {
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    backdropPath?: string;
    /**
     * 
     * @type {MovieCredits}
     * @memberof Movie
     */
    credits?: MovieCredits;
    /**
     * 
     * @type {number}
     * @memberof Movie
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    imdbId?: string;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    overview?: string;
    /**
     * 
     * @type {number}
     * @memberof Movie
     */
    popularity?: number;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    posterPath?: string;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    releaseDate?: string;
    /**
     * 
     * @type {number}
     * @memberof Movie
     */
    runtime?: number;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    tagline?: string;
    /**
     * 
     * @type {string}
     * @memberof Movie
     */
    title: string;
}

/**
 * Check if a given object implements the Movie interface.
 */
export function instanceOfMovie(value: object): value is Movie {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function MovieFromJSON(json: any): Movie {
    return MovieFromJSONTyped(json, false);
}

export function MovieFromJSONTyped(json: any, ignoreDiscriminator: boolean): Movie {
    if (json == null) {
        return json;
    }
    return {
        
        'backdropPath': json['backdropPath'] == null ? undefined : json['backdropPath'],
        'credits': json['credits'] == null ? undefined : MovieCreditsFromJSON(json['credits']),
        'id': json['id'],
        'imdbId': json['imdbId'] == null ? undefined : json['imdbId'],
        'overview': json['overview'] == null ? undefined : json['overview'],
        'popularity': json['popularity'] == null ? undefined : json['popularity'],
        'posterPath': json['posterPath'] == null ? undefined : json['posterPath'],
        'releaseDate': json['releaseDate'] == null ? undefined : json['releaseDate'],
        'runtime': json['runtime'] == null ? undefined : json['runtime'],
        'status': json['status'] == null ? undefined : json['status'],
        'tagline': json['tagline'] == null ? undefined : json['tagline'],
        'title': json['title'],
    };
}

export function MovieToJSON(json: any): Movie {
    return MovieToJSONTyped(json, false);
}

export function MovieToJSONTyped(value?: Movie | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'backdropPath': value['backdropPath'],
        'credits': MovieCreditsToJSON(value['credits']),
        'id': value['id'],
        'imdbId': value['imdbId'],
        'overview': value['overview'],
        'popularity': value['popularity'],
        'posterPath': value['posterPath'],
        'releaseDate': value['releaseDate'],
        'runtime': value['runtime'],
        'status': value['status'],
        'tagline': value['tagline'],
        'title': value['title'],
    };
}

