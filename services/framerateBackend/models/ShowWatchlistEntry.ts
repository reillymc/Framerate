/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ShowWatchlistEntry
 */
export interface ShowWatchlistEntry {
    /**
     * 
     * @type {Date}
     * @memberof ShowWatchlistEntry
     */
    firstAirDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ShowWatchlistEntry
     */
    imdbId?: string;
    /**
     * 
     * @type {Date}
     * @memberof ShowWatchlistEntry
     */
    lastAirDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ShowWatchlistEntry
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof ShowWatchlistEntry
     */
    nextAirDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ShowWatchlistEntry
     */
    posterPath?: string;
    /**
     * 
     * @type {number}
     * @memberof ShowWatchlistEntry
     */
    showId: number;
    /**
     * 
     * @type {string}
     * @memberof ShowWatchlistEntry
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof ShowWatchlistEntry
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the ShowWatchlistEntry interface.
 */
export function instanceOfShowWatchlistEntry(value: object): value is ShowWatchlistEntry {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('showId' in value) || value['showId'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ShowWatchlistEntryFromJSON(json: any): ShowWatchlistEntry {
    return ShowWatchlistEntryFromJSONTyped(json, false);
}

export function ShowWatchlistEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShowWatchlistEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'firstAirDate': json['firstAirDate'] == null ? undefined : (new Date(json['firstAirDate'])),
        'imdbId': json['imdbId'] == null ? undefined : json['imdbId'],
        'lastAirDate': json['lastAirDate'] == null ? undefined : (new Date(json['lastAirDate'])),
        'name': json['name'],
        'nextAirDate': json['nextAirDate'] == null ? undefined : (new Date(json['nextAirDate'])),
        'posterPath': json['posterPath'] == null ? undefined : json['posterPath'],
        'showId': json['showId'],
        'status': json['status'] == null ? undefined : json['status'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function ShowWatchlistEntryToJSON(json: any): ShowWatchlistEntry {
    return ShowWatchlistEntryToJSONTyped(json, false);
}

export function ShowWatchlistEntryToJSONTyped(value?: ShowWatchlistEntry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'firstAirDate': value['firstAirDate'] == null ? undefined : ((value['firstAirDate']).toISOString().substring(0,10)),
        'imdbId': value['imdbId'],
        'lastAirDate': value['lastAirDate'] == null ? undefined : ((value['lastAirDate']).toISOString().substring(0,10)),
        'name': value['name'],
        'nextAirDate': value['nextAirDate'] == null ? undefined : ((value['nextAirDate']).toISOString().substring(0,10)),
        'posterPath': value['posterPath'],
        'showId': value['showId'],
        'status': value['status'],
        'updatedAt': ((value['updatedAt']).toISOString().substring(0,10)),
    };
}

