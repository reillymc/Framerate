/* tslint:disable */
/* eslint-disable */
/**
 * Framerate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReviewCompanyDetails } from './ReviewCompanyDetails';
import {
    ReviewCompanyDetailsFromJSON,
    ReviewCompanyDetailsFromJSONTyped,
    ReviewCompanyDetailsToJSON,
    ReviewCompanyDetailsToJSONTyped,
} from './ReviewCompanyDetails';
import type { Show } from './Show';
import {
    ShowFromJSON,
    ShowFromJSONTyped,
    ShowToJSON,
    ShowToJSONTyped,
} from './Show';

/**
 * 
 * @export
 * @interface ShowReviewResponse
 */
export interface ShowReviewResponse {
    /**
     * 
     * @type {Array<ReviewCompanyDetails>}
     * @memberof ShowReviewResponse
     */
    company?: Array<ReviewCompanyDetails>;
    /**
     * 
     * @type {Date}
     * @memberof ShowReviewResponse
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ShowReviewResponse
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof ShowReviewResponse
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof ShowReviewResponse
     */
    reviewId: string;
    /**
     * 
     * @type {Show}
     * @memberof ShowReviewResponse
     */
    show: Show;
    /**
     * 
     * @type {string}
     * @memberof ShowReviewResponse
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ShowReviewResponse
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof ShowReviewResponse
     */
    venue?: string;
}

/**
 * Check if a given object implements the ShowReviewResponse interface.
 */
export function instanceOfShowReviewResponse(value: object): value is ShowReviewResponse {
    if (!('reviewId' in value) || value['reviewId'] === undefined) return false;
    if (!('show' in value) || value['show'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function ShowReviewResponseFromJSON(json: any): ShowReviewResponse {
    return ShowReviewResponseFromJSONTyped(json, false);
}

export function ShowReviewResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShowReviewResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'company': json['company'] == null ? undefined : ((json['company'] as Array<any>).map(ReviewCompanyDetailsFromJSON)),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'description': json['description'] == null ? undefined : json['description'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'reviewId': json['reviewId'],
        'show': ShowFromJSON(json['show']),
        'title': json['title'] == null ? undefined : json['title'],
        'userId': json['userId'],
        'venue': json['venue'] == null ? undefined : json['venue'],
    };
}

export function ShowReviewResponseToJSON(json: any): ShowReviewResponse {
    return ShowReviewResponseToJSONTyped(json, false);
}

export function ShowReviewResponseToJSONTyped(value?: ShowReviewResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'company': value['company'] == null ? undefined : ((value['company'] as Array<any>).map(ReviewCompanyDetailsToJSON)),
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'description': value['description'],
        'rating': value['rating'],
        'reviewId': value['reviewId'],
        'show': ShowToJSON(value['show']),
        'title': value['title'],
        'userId': value['userId'],
        'venue': value['venue'],
    };
}

